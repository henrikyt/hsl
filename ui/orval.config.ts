import { defineConfig } from "orval";
import { faker } from "@faker-js/faker";

declare global {
	interface Window {
		MOCKS: Record<string, any>;
	}
}

export default defineConfig({
	agentExperience: {
		input: {
			target: "./openapi.json",
		},
		output: {
			mode: "tags-split",
			workspace: "./src/api/gen",
			target: "./api.ts",
			client: "react-query",
			mock: true,
			clean: true,
			schemas: "schemas",
			override: {
				query: {
					useInfinite: false,
					useInfiniteQueryParam: "page_token",
					useQuery: true,
					signal: true,
					queryOptions: {
						path: "./src/api/defaultQueryOptions.ts",
						name: "defaultQueryOptions",
					},
				},
				mutator: {
					path: "../client.ts",
					name: "requestClient",
				},
				mock: {
					delay: 0,
				},
				header: (info): string[] => [
					`Generated by orval üç∫`,
					`Do not edit manually.`,
					...(info.title ? [info.title] : []),
					...(info.description ? [info.description] : []),
					...(info.version ? [`OpenAPI spec version: ${info.version}`] : []),
				],
			},
		},
	},
});
